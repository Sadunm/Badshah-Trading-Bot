{
  "tech_stack": [
    "Python 3.8+",
    "Flask",
    "ccxt (Binance API)",
    "NumPy",
    "Pandas",
    "TA-Lib",
    "threading",
    "requests",
    "Docker",
    "Render.com (Cloud)"
  ],
  "features": [
    {
      "name": "Multi-Strategy Trading Engine",
      "description": "Core trading bot with 7 strategies (SCALPING, DAY_TRADING, SWING_TRADING, RANGE_TRADING, MOMENTUM, POSITION_TRADING, GRID_TRADING). Currently uses 3 ULTRA_AGGRESSIVE strategies.",
      "files": [
        "start_live_multi_coin_trading.py"
      ],
      "api_doc": {
        "functions": [
          "generate_scalping_signal",
          "generate_day_trading_signal",
          "generate_momentum_signal",
          "generate_swing_trading_signal",
          "generate_range_trading_signal",
          "generate_position_trading_signal",
          "generate_grid_trading_signal"
        ]
      }
    },
    {
      "name": "BUSS v2 Adaptive System",
      "description": "Badshah Universal Strategy System v2 with EPRU tracking, Market Health Index, dynamic exposure calculation, market transition detection, and feedback loop for auto-adjustment",
      "files": [
        "start_live_multi_coin_trading.py"
      ],
      "api_doc": {
        "functions": [
          "calculate_mhi",
          "update_epru",
          "calculate_dynamic_exposure",
          "detect_market_transition",
          "feedback_loop_review",
          "check_self_regulation"
        ],
        "metrics": {
          "epru": "Expected Profit per Risk Unit (target > 1.0)",
          "mhi": "Market Health Index (0-2, higher = more stable)",
          "dynamic_exposure": "Position size multiplier (0.5x to 4.0x)",
          "regulation_state": "NORMAL, CAUTION, PAUSED, EMERGENCY"
        }
      }
    },
    {
      "name": "Position Management",
      "description": "Comprehensive position opening, closing, and management with multi-tier profit locking (instant exit, break-even, trailing stop, confidence-based exits)",
      "files": [
        "start_live_multi_coin_trading.py"
      ],
      "api_doc": {
        "functions": [
          "open_position",
          "close_position",
          "manage_positions",
          "calculate_position_size"
        ],
        "exit_tiers": {
          "instant_exit": "0.15% net profit (after fees)",
          "breakeven_stop": "0.3% profit",
          "trailing_stop": "0.8% profit activation, 0.4% trail distance",
          "confidence_exit": "Variable based on profit level (0.5-2.0%+)"
        }
      }
    },
    {
      "name": "Market Regime Detection",
      "description": "Analyzes market conditions and classifies into 6 regimes: STRONG_UPTREND, WEAK_UPTREND, SIDEWAYS, WEAK_DOWNTREND, STRONG_DOWNTREND, VOLATILE. Adjusts strategy allocation accordingly.",
      "files": [
        "start_live_multi_coin_trading.py"
      ],
      "api_doc": {
        "functions": [
          "analyze_market_regime",
          "adjust_capital_allocation"
        ],
        "regimes": [
          "STRONG_UPTREND",
          "WEAK_UPTREND",
          "SIDEWAYS",
          "WEAK_DOWNTREND",
          "STRONG_DOWNTREND",
          "VOLATILE"
        ]
      }
    },
    {
      "name": "Technical Indicators Calculation",
      "description": "Calculates 20+ technical indicators including RSI, EMA, MACD, ATR, Bollinger Bands, volume analysis, momentum, support/resistance levels",
      "files": [
        "start_live_multi_coin_trading.py"
      ],
      "api_doc": {
        "functions": [
          "calculate_indicators",
          "calculate_rsi",
          "calculate_ema",
          "calculate_macd",
          "calculate_atr",
          "find_support_resistance"
        ],
        "indicators": {
          "rsi": "Relative Strength Index (14-period)",
          "ema": "Exponential Moving Averages (9, 21, 50, 200)",
          "macd": "Moving Average Convergence Divergence",
          "atr": "Average True Range (14-period)",
          "bb": "Bollinger Bands (20, 2)",
          "volume_ratio": "Current volume / 20-period MA",
          "momentum": "3-period and 10-period price change %"
        }
      }
    },
    {
      "name": "Signal Confidence Calculation",
      "description": "Dynamic confidence scoring (0-100%) based on RSI strength, volume confirmation, trend alignment, MACD, momentum, and volatility. Currently has a bug where it returns 0.3 instead of 30.",
      "files": [
        "start_live_multi_coin_trading.py"
      ],
      "api_doc": {
        "function": "calculate_signal_confidence",
        "parameters": {
          "indicators": "Dict of calculated indicators",
          "signal_type": "'BUY' or 'SELL'",
          "base_confidence": "Starting confidence (20-50)"
        },
        "returns": "Confidence as 0-1 scale (needs *100 conversion)",
        "bug": "Returns 0.30 but should be 30% - missing *100 in signal generation"
      }
    },
    {
      "name": "Market Data Scanner",
      "description": "Scans 64 cryptocurrency pairs every 30 seconds, fetches OHLCV data, calculates indicators, scores opportunities",
      "files": [
        "start_live_multi_coin_trading.py"
      ],
      "api_doc": {
        "function": "scan_market",
        "coins": 64,
        "interval": "30 seconds",
        "api_rotation": "3 Binance API keys",
        "caching": "30-second price cache"
      }
    },
    {
      "name": "Risk Management System",
      "description": "Multi-layered risk protection: position sizing, ATR-based stops/targets, daily loss limit, consecutive loss protection, daily trade limit, self-regulation",
      "files": [
        "start_live_multi_coin_trading.py"
      ],
      "api_doc": {
        "limits": {
          "max_total_positions": 5,
          "daily_loss_limit": "$200",
          "consecutive_loss_limit": 3,
          "max_daily_trades": 20,
          "position_size": "10-20% of capital",
          "volatility_adjustment": "0.7x (high vol) to 1.2x (low vol)"
        },
        "functions": [
          "check_self_regulation",
          "calculate_position_size",
          "format_quantity"
        ]
      }
    },
    {
      "name": "Auto-Compounding Engine",
      "description": "Position sizes automatically grow with profits and shrink with losses based on current equity vs initial capital",
      "files": [
        "start_live_multi_coin_trading.py"
      ],
      "api_doc": {
        "formula": "compounding_multiplier = current_equity / initial_capital",
        "effect": "Position size scales proportionally with account growth"
      }
    },
    {
      "name": "Adaptive Confidence Threshold",
      "description": "Dynamically adjusts minimum confidence threshold (10-60%) based on recent win rate. Currently has bug where threshold is too high (40-60% instead of 10-20%)",
      "files": [
        "start_live_multi_coin_trading.py"
      ],
      "api_doc": {
        "function": "update_adaptive_confidence",
        "thresholds": {
          "win_rate_65": "10% threshold (EXTREME)",
          "win_rate_55": "12% threshold",
          "win_rate_45": "15% threshold",
          "win_rate_below_45": "20% threshold"
        },
        "bug_status": "FIXED - Was 40-60%, now 10-20%"
      }
    },
    {
      "name": "Flask Web Dashboard",
      "description": "Real-time web interface showing bot status, positions, trades, performance metrics, BUSS v2 data",
      "files": [
        "start_live_multi_coin_trading.py"
      ],
      "api_doc": {
        "endpoints": [
          {
            "path": "/",
            "method": "GET",
            "description": "Dashboard HTML page"
          },
          {
            "path": "/api/stats",
            "method": "GET",
            "description": "System statistics (capital, P&L, win rate, BUSS v2 metrics)",
            "response": {
              "trading_mode": "PAPER or LIVE",
              "open_positions": "number",
              "total_trades": "number",
              "total_pnl": "number",
              "win_rate": "percentage",
              "current_capital": "number",
              "market_regime": "string",
              "buss_v2": {
                "mhi": "number",
                "epru": "number",
                "base_threshold": "number",
                "current_threshold": "number",
                "dynamic_exposure": "number",
                "regulation_state": "string"
              }
            }
          },
          {
            "path": "/api/positions",
            "method": "GET",
            "description": "Current open positions with unrealized P&L"
          },
          {
            "path": "/api/logs",
            "method": "GET",
            "description": "Last 200 log lines"
          },
          {
            "path": "/api/trade-history",
            "method": "GET",
            "description": "All closed trades from CSV + current session"
          }
        ],
        "port": 10000,
        "auto_refresh": "5 seconds"
      }
    },
    {
      "name": "Binance API Integration",
      "description": "CCXT-based integration with Binance Futures (USDT perpetuals), API key rotation, rate limit handling, price caching, symbol info caching",
      "files": [
        "start_live_multi_coin_trading.py"
      ],
      "api_doc": {
        "exchange": "Binance Futures",
        "testnet": "https://testnet.binancefuture.com",
        "api_keys": 3,
        "rate_limit": "1200 requests/minute per key",
        "functions": [
          "get_current_price",
          "get_klines",
          "load_symbol_info",
          "format_quantity"
        ],
        "caching": {
          "price_cache": "30 seconds TTL",
          "symbol_info": "Permanent (precision, lot size, filters)"
        }
      }
    },
    {
      "name": "Performance Analytics",
      "description": "Tracks daily/weekly/monthly stats, win/loss streaks, Sharpe ratio, max drawdown, consistency score",
      "files": [
        "start_live_multi_coin_trading.py"
      ],
      "api_doc": {
        "class": "PerformanceAnalytics",
        "metrics": [
          "daily_stats",
          "weekly_stats",
          "monthly_stats",
          "max_drawdown",
          "sharpe_ratio",
          "win_streak",
          "loss_streak",
          "consistency_score"
        ]
      }
    },
    {
      "name": "Trade History CSV Logger",
      "description": "Logs all trades to CSV file with detailed entry/exit data, P&L, fees, market conditions",
      "files": [
        "start_live_multi_coin_trading.py"
      ],
      "api_doc": {
        "file": "trading_history_YYYYMMDD_HHMMSS.csv",
        "columns": [
          "timestamp",
          "symbol",
          "strategy",
          "action",
          "entry_price",
          "exit_price",
          "quantity",
          "pnl",
          "pnl_pct",
          "fees",
          "entry_reason",
          "exit_reason",
          "hold_duration_hours",
          "entry_market_condition",
          "exit_market_condition",
          "stop_loss",
          "take_profit",
          "confidence"
        ]
      }
    },
    {
      "name": "Paper Trading Mode",
      "description": "Simulated trading with virtual $10,000 capital, no real money risk, full feature parity with live mode",
      "files": [
        "start_live_multi_coin_trading.py"
      ],
      "api_doc": {
        "initial_capital": 10000,
        "fees": "0.1% entry + 0.09% exit = 0.19% total",
        "slippage": "0.05%",
        "mode_toggle": "LIVE_TRADING_MODE = False"
      }
    },
    {
      "name": "Live Trading Mode",
      "description": "Real money trading with additional safety limits and confirmations",
      "files": [
        "start_live_multi_coin_trading.py"
      ],
      "api_doc": {
        "mode_toggle": "LIVE_TRADING_MODE = True",
        "additional_limits": {
          "max_position_size": "$500 per trade",
          "daily_loss_limit": "$200",
          "max_total_risk": "20% of capital"
        }
      }
    }
  ]
}
